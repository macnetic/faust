cmake_minimum_required(VERSION 3.0.2)


SET (CTEST_SOURCE_DIRECTORY "./")
SET (CTEST_BINARY_DIRECTORY "build")

set (CTEST_CMAKE_GENERATOR "Unix Makefiles") # using cmake for building so no need to set CTEST_CONFIGURE_COMMAND

set(CTEST_BUILD_NAME "${CMAKE_SYSTEM}_${CMAKE_HOST_SYSTEM_PROCESSOR}")

SET (CTEST_START_WITH_EMPTY_BINARY_DIRECTORY TRUE)

set(CTEST_SITE "FaustLinux")

if($ENV{BUILD_WRAPPER_PYTHON} MATCHES "ON")
	set(CTEST_SITE "${CTEST_SITE}Python")
	#set(BUILD_WRAPPER_PYTHON ON CACHE BOOL "" FORCE) #ignored by configure
	set(CONF_OPTIONS "-DBUILD_WRAPPER_PYTHON=ON")
elseif($ENV{BUILD_WRAPPER_MATLAB} MATCHES "ON")
	set(CTEST_SITE "${CTEST_SITE}Matlab")
	#set(BUILD_WRAPPER_MATLAB ON CACHE BOOL "" FORCE)
	set(CONF_OPTIONS "-DBUILD_WRAPPER_MATLAB=ON")
endif()

message(STATUS "The git branch is:" $ENV{CI_COMMIT_REF_NAME})
message(STATUS "The git commit is:" $ENV{CI_COMMIT_SHA})


CTEST_START("Experimental") # TODO: Continuous mode ?
message(STATUS "The site name is: " ${CTEST_SITE})
#CTEST_START("Nightly")
#CTEST_START("Continuous")
#CTEST_UPDATE() # no need to checkout because gitlab-runner does it
set(BUILD_WRAPPER_PYTHON ON CACHE BOOL "" FORCE)

CTEST_CONFIGURE(OPTIONS ${CONF_OPTIONS})
# no OPTIONS (arg)
#CTEST_BUILD(TARGET install) #no need to install, just compiling
CTEST_BUILD()

#IF(UNIX)
#	SET(ENV{LD_LIBRARY_PATH} "$ENV{LD_LIBRARY_PATH}:${CTEST_INSTALL_DIR}/lib")
#ENDIF(UNIX)
# no shared libraries to look at


CTEST_TEST()
if (WITH_COVERAGE AND CTEST_COVERAGE_COMMAND)
  ctest_coverage()
endif (WITH_COVERAGE AND CTEST_COVERAGE_COMMAND)
if (WITH_MEMCHECK AND CTEST_MEMORYCHECK_COMMAND)
  ctest_memcheck()
endif (WITH_MEMCHECK AND CTEST_MEMORYCHECK_COMMAND)
CTEST_SUBMIT()
