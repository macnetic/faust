.ctest_template: &ctest_script
    script:
        - ctest -O ctest.log -S ./CDashConfScript.cmake

stages:
        - test
        - test_wrapper
        - package_rev

ctest:
    <<: *ctest_script
    variables: {SLOW_TESTS: "OFF"}
    except:
        - schedules
        - tags
    stage: test

ctest_python:
    <<: *ctest_script
    variables: {BUILD_WRAPPER_PYTHON: "ON", SLOW_TESTS: "OFF", DONT_PYPLOT_FAUST_TIME: "ON", GIT_STRATEGY: none}
    except:
        - schedules
        - tags
    stage: test_wrapper

ctest_matlab:
    <<: *ctest_script
    variables: {BUILD_WRAPPER_MATLAB: "ON", SLOW_TESTS: "OFF"}
    except:
        - schedules
        - tags
    stage: test_wrapper

.ctest_nightly: &ctest_nightly_script
    <<: *ctest_script
    variables: {BUILD_WRAPPER_MATLAB: "ON", BUILD_WRAPPER_PYTHON: "ON", SLOW_TESTS: "ON", DONT_PYPLOT_FAUST_TIME: "ON"}
    only:
        - schedules

.ctest_nightly_linux:
    <<: *ctest_nightly_script
    tags:
       - linux

ctest_nightly_macos:
    <<: *ctest_nightly_script
    tags:
       - macos

ctest_nightly_win7:
    <<: *ctest_script
    variables: {BUILD_WRAPPER_MATLAB: "ON", BUILD_WRAPPER_PYTHON: "OFF", SLOW_TESTS: "ON"}
    only:
        - schedules
    tags:
       - win7

package_macos:
    stage: package_rev
    script:
        - SHA_START=$(echo $CI_COMMIT_SHA | sed -e 's/^\(.\{8\}\).*/\1/')
        - if [[ ! -d 'build' ]]; then  mkdir build;fi; cd build
        - 'cmake -DBUILD_WRAPPER_PYTHON=ON -DBUILD_WRAPPER_MATLAB=ON -DBUILD_DOCUMENTATION=ON -DCPACK_PACKAGE_VERSION=$SHA_START -DCMAKE_INSTALL_PREFIX=/opt/local/faust-$SHA_START -DBUILD_TESTING=OFF ..'
        - make
        - 'echo $MACOS_PASS | sudo -S make install'
          #- 'echo $MACOS_PASS | sudo -S hdiutil create -volname Faust-$SHA_START-MatlabR2016a-Py2.7 -srcfolder /opt/local/faust-$SHA_START -ov -format UDRW faust-$SHA_START'
        - pkgbuild --identifier fr.inria.faust --version $SHA_START --root /opt/local/faust-$SHA_START --install-location /opt/local/faust-$SHA_START --scripts . ./faust-$SHA_START.pkg
        - for FILE in $(find /usr/local/lib ! -iname "libmatio*" -maxdepth 1 -mindepth 1); do filter_list+="--filter $(basename $FILE) "; done;
        - pkgbuild --identifier fr.inria.faust.matio --version 1.5.12 --root /usr/local/lib $filter_list --install-location /usr/local/lib ./matio-bin-1.5.12.pkg
        - productbuild --synthesize --package ./matio-bin-1.5.12.pkg --package faust-$SHA_START.pkg ./distribution.plist
        - sed -e 's/\(.*pkg-ref id=.fr.inria.faust".*\)/\1<title>FAµST '$SHA_START'<\/title><license file="licenses.html"\/><readme file="installer_readme.html"\/>/' distribution.plist > tmp.plist; mv tmp.plist distribution.plist
        - productbuild --distribution ./distribution.plist --package-path . --resources doc ./faust-matio-$SHA_START.pkg
        - mv ./faust-matio-$SHA_START.pkg ./faust-$SHA_START.pkg
        # - if [[ -d $MACOS_PKG_STORE_PATH ]]; then echo $MACOS_PASS | sudo -S mv faust-$SHA_START.dmg faust-$SHA_START.pkg $MACOS_PKG_STORE_PATH; fi
        #- if [[ -d $MACOS_PKG_STORE_PATH ]]; then echo $MACOS_PASS | sudo -S cp faust-$SHA_START.dmg faust-$SHA_START.pkg $MACOS_PKG_STORE_PATH; fi
        - if [[ -d $MACOS_PKG_STORE_PATH ]]; then echo $MACOS_PASS | sudo -S cp faust-$SHA_START.pkg $MACOS_PKG_STORE_PATH; fi
    artifacts:
        paths:
            - build/faust-${CI_COMMIT_SHA:0:8}.pkg
              #- build/faust-${CI_COMMIT_SHA:0:8}.dmg
        expire_in: '6 mos'
    tags:
        - macos
    except:
        - schedules
        - tags

package_win:
    stage: package_rev
    script:
        - 'set SHA_START=%CI_COMMIT_SHA:~0,8%'
        - if NOT EXIST build (mkdir build) else rmdir /S /Q build
        - cd build
        - 'cmake -G "MinGW Makefiles" -DBUILD_WRAPPER_MATLAB=ON -DBUILD_WRAPPER_PYTHON=ON -DSLOW_TESTS=OFF -DCPACK_PACKAGE_VERSION=%SHA_START% -DBUILD_DOCUMENTATION=ON -DEXCLUDE_FAUST_LIB_INSTALL=ON -DCMAKE_INSTALL_PREFIX=win_pkg_build -DBUILD_TESTING=OFF ..'
        - make
        - makensis faust.nsi
    artifacts:
        paths:
            - build/faust-%CI_COMMIT_SHA:~0,8%-amd64.exe
        expire_in: '6 mos'
    tags:
        - win7
    except:
        - schedules
        - tags

package_linux:
   stage: package_rev
   script:
        - SHA_START=$(echo $CI_COMMIT_SHA | sed -e 's/^\(.\{8\}\).*/\1/')
        - if [[ ! -d 'build' ]]; then  mkdir build;fi; cd build
        - 'cmake -DBUILD_WRAPPER_PYTHON=ON -DBUILD_WRAPPER_MATLAB=ON -DBUILD_DOCUMENTATION=ON -DCMAKE_INSTALL_PREFIX=/opt/local/faust-$SHA_START -DCPACK_PACKAGE_FILE_NAME=faust-$SHA_START -DCPACK_PACKAGE_VERSION=$SHA_START -DBUILD_TESTING=OFF ..'
        - make
        - cpack -G RPM -C CPackConfig.cmake
        - cpack -G DEB -C CPackConfig.cmake
        - 'cp faust-$SHA_START* $HOME'
   artifacts:
        paths:
            - build/faust-${CI_COMMIT_SHA:0:8}-x86_64.deb
            - build/faust-${CI_COMMIT_SHA:0:8}-x86_64.rpm
        expire_in: '6 mos'
   tags:
        - linux
   except:
        - schedules
        - tags



# jobs triggered by git tag can force cpack to use the tag name as version but it's not necessary for MacOSX (not using cpack for that sys.)
# it's done for linux packages

package_macos_release:
    script:
        - if [[ ! -d 'build' ]]; then  mkdir build;fi; cd build
        - 'cmake -DBUILD_WRAPPER_PYTHON=ON -DBUILD_WRAPPER_MATLAB=ON -DBUILD_DOCUMENTATION=ON -DCMAKE_INSTALL_PREFIX=/opt/local/faust -DCPACK_PACKAGE_VERSION=$CI_COMMIT_TAG -DCMAKE_BUILD_TYPE=Release -DEXCLUDE_FAUST_LIB_INSTALL=ON -DBUILD_TESTING=OFF ..'
        - make
        - 'echo $MACOS_PASS | sudo -S make install'
        - 'echo $MACOS_PASS | sudo -S hdiutil create -volname Faust-$CI_COMMIT_TAG-MatlabR2016a-Py2.7 -srcfolder /opt/local/faust -ov -format UDRW faust-$CI_COMMIT_TAG'
        - pkgbuild --identifier fr.inria.faust --version $CI_COMMIT_TAG --root /opt/local/faust --install-location /opt/local/faust --scripts . ./faust-$CI_COMMIT_TAG.pkg
        - for FILE in $(find /usr/local/lib ! -iname "libmatio*" -maxdepth 1 -mindepth 1); do filter_list+="--filter $(basename $FILE) "; done;
        - pkgbuild --identifier fr.inria.faust.matio --version 1.5.12 --root /usr/local/lib $filter_list --install-location /usr/local/lib ./matio-bin-1.5.12.pkg
        - productbuild --synthesize --package ./matio-bin-1.5.12.pkg --package faust-$CI_COMMIT_TAG.pkg ./distribution.plist
        - sed -e 's/\(.*pkg-ref id=.fr.inria.faust".*\)/\1<title>FAµST '$CI_COMMIT_TAG'<\/title><license file="licenses.html"\/><readme file="installer_readme.html"\/>/' distribution.plist > tmp.plist; mv tmp.plist distribution.plist
        - productbuild --distribution ./distribution.plist --package-path . --resources doc ./faust-matio-$CI_COMMIT_TAG.pkg
        - mv ./faust-matio-$CI_COMMIT_TAG.pkg ./faust-$CI_COMMIT_TAG.pkg
          #- if [[ -d $MACOS_PKG_STORE_PATH ]]; then echo $MACOS_PASS | sudo -S cp faust-$CI_COMMIT_TAG.dmg faust-$CI_COMMIT_TAG.pkg $MACOS_PKG_STORE_PATH; fi
        - if [[ -d $MACOS_PKG_STORE_PATH ]]; then echo $MACOS_PASS | sudo -S cp faust-$CI_COMMIT_TAG.pkg $MACOS_PKG_STORE_PATH; fi
    artifacts:
        paths:
            - build/faust-${CI_COMMIT_TAG}.pkg
              #- build/faust-${CI_COMMIT_TAG}.dmg
        expire_in: '50 yrs'
    tags:
        - macos
    only:
        - tags

package_win_release:
    script:
        - if NOT EXIST build (mkdir build) else rmdir /S /Q build
        - cd build
        - 'cmake -G "MinGW Makefiles" -DBUILD_WRAPPER_MATLAB=ON -DBUILD_WRAPPER_PYTHON=ON -DSLOW_TESTS=OFF -DCPACK_PACKAGE_VERSION=%CI_COMMIT_TAG% -DBUILD_DOCUMENTATION=ON -DEXCLUDE_FAUST_LIB_INSTALL=ON -DCMAKE_INSTALL_PREFIX=win_pkg_build -DBUILD_TESTING=OFF ..'
        - make
        - makensis faust.nsi
    artifacts:
        paths:
            - build/faust-%CI_COMMIT_TAG%-amd64.exe
        expire_in: '50 yrs'
    tags:
        - win7
    only:
        - tags

package_linux_release:
   script:
        - if [[ ! -d 'build' ]]; then  mkdir build;fi; cd build
        - 'cmake -DBUILD_WRAPPER_PYTHON=ON -DBUILD_WRAPPER_MATLAB=ON -DBUILD_DOCUMENTATION=ON -DCMAKE_INSTALL_PREFIX=/opt/local/faust -DCPACK_PACKAGE_FILE_NAME=faust-$CI_COMMIT_TAG -DCPACK_PACKAGE_VERSION=$CI_COMMIT_TAG -DEXCLUDE_FAUST_LIB_INSTALL=ON  -DBUILD_TESTING=OFF ..'
        - make
        - cpack -G RPM -C CPackConfig.cmake
        - cpack -G DEB -C CPackConfig.cmake
        - 'cp faust-$CI_COMMIT_TAG*rpm faust-$CI_COMMIT_TAG*.deb $HOME'
   artifacts:
        paths:
            - build/faust-$CI_COMMIT_TAG-x86_64.deb
            - build/faust-$CI_COMMIT_TAG-x86_64.rpm
        expire_in: '50 yrs'
   tags:
        - linux
   only:
        - tags


package_linux_release_static:
   script:
        - if [[ ! -d 'build' ]]; then  mkdir build;fi; cd build
        - 'cmake -DBUILD_WRAPPER_PYTHON=ON -DBUILD_WRAPPER_MATLAB=ON -DBUILD_DOCUMENTATION=ON -DCMAKE_INSTALL_PREFIX=/opt/local/faust -DCPACK_PACKAGE_FILE_NAME=faust-$CI_COMMIT_TAG-static -DCPACK_PACKAGE_VERSION=$CI_COMMIT_TAG -DEXCLUDE_FAUST_LIB_INSTALL=ON -DUSE_MATIO_STATIC_LIBS=ON -DMATIO_STATIC_LIB_PATH=/opt/local/matio-1.5.7/src/.libs/libmatio.a -DZ_STATIC_LIB_PATH=/opt/local/zlib-1.2.11/libz.a -DHDF5_STATIC_LIB_PATH=/opt/local/hdf5-1.8.18/src/.libs/libhdf5.a -DBUILD_TESTING=OFF ..'
        - make
        - cpack -G RPM -C CPackConfig.cmake
        - cpack -G DEB -C CPackConfig.cmake
        - 'cp faust-$CI_COMMIT_TAG*rpm faust-$CI_COMMIT_TAG*.deb $HOME'
   artifacts:
        paths:
            - build/faust-$CI_COMMIT_TAG-static-x86_64.deb
            - build/faust-$CI_COMMIT_TAG-static-x86_64.rpm
        expire_in: '50 yrs'
   tags:
        - linux
   only:
        - tags

pages:
    script:
       - if [[ ! -d 'build' ]]; then  mkdir build;fi; cd build
       - 'cmake -DBUILD_WRAPPER_PYTHON=ON -DBUILD_WRAPPER_MATLAB=ON -DBUILD_DOCUMENTATION=ON -DCMAKE_INSTALL_PREFIX=/opt/local/faust -DCPACK_PACKAGE_FILE_NAME=faust-$CI_COMMIT_TAG -DCPACK_PACKAGE_VERSION=$CI_COMMIT_TAG -DEXCLUDE_FAUST_LIB_INSTALL=ON  -DINCLUDE_ALL_SYS_INSTALL_INSTRUCS=ON ..'
       - make doc
       - mkdir -p ../public/doc-$CI_COMMIT_TAG
       - cp -Rf doc/html ../public/doc-$CI_COMMIT_TAG/
    artifacts:
       paths:
           - public/
    tags:
        - linux
    only:
        - tags

