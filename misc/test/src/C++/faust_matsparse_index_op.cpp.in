#include "faust_MatSparse.h"
#include <iostream>

/** \brief unitary test for MatDense conjugate
*/

typedef @TEST_FPP@ FPP;


using namespace Faust;
using namespace std;

int main(int argc, char* argv[])
{
	faust_unsigned_int dim1 = 3;
	faust_unsigned_int dim2 = 3;

	MatDense<FPP,Cpu>* M1;
	Faust::MatSparse<FPP,Cpu> M_sp1;
	M1 = Faust::MatDense<FPP,Cpu>::randMat(dim1,dim2);
	M_sp1 = *M1;
	cout << "M_sp1:" << endl;
	M_sp1.Display();
	cout<<"M1:"<<endl;
	M1->Display();
	for(int i = 0; i < M1->getNbRow(); i++)
		for(int j = 0; j < M1->getNbCol(); j++)
		{
			assert(M_sp1(i,j) == (*M1)(i,j));
		}
	return 0;
}
