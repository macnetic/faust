
#include "faust_MatDense.h"

using namespace Faust;
typedef @TEST_FPP@ FPP;

int main(int argc, char** argv)
{
    // test MatDense backup and restore
    auto mat = MatDense<FPP, Cpu>::randMat(32, 128);
    mat->save_to_mat_file("rand_matdense.mat", "test");
    MatDense<FPP, Cpu> read_mat;
    read_mat.read_from_mat_file("rand_matdense.mat", "test");
    *mat -= read_mat;
    assert(mat->norm() == 0);
    //test MatSparse backup and restore
    auto smat = MatSparse<FPP, Cpu>::randMat(32, 128, .1);
    smat->save_to_mat_file("rand_matsparse.mat", "test");
    MatSparse<FPP, Cpu> read_smat;
    read_smat.read_from_mat_file("rand_matsparse.mat", "test");
    MatDense<FPP, Cpu> diff = *smat;
    diff -= read_smat;
    assert(diff.norm() == 0);
}
