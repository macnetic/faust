##Generation of the documentation using doxygen
# add a target to generate API documentation with Doxygen
if(BUILD_DOCUMENTATION)
	find_package(Doxygen)
	if(DOXYGEN_FOUND)
		if(NOT ${EXCLUDE_FAUST_LIB_INSTALL})
			string(CONCAT DOXYGEN_FILE_PATTERNS "*.cpp *.hpp *.h *.cu *.hu")
		endif()
		if(BUILD_WRAPPER_MATLAB)
			string(CONCAT DOXYGEN_FILE_PATTERNS ${DOXYGEN_FILE_PATTERNS} " Faust.m StoppingCriterion.m ConstraintGeneric.m ConstraintMat.m ConstraintReal.m ConstraintInt.m ConstraintName.m ParamsFact.m ParamsHierarchicalFact.m ParamsPalm4MSA.m FaustFactory.m hadamard.m quickstart.m fft.m bsl.m runtimecmp.m runall.m version.m faust_fact.m ParamsHierarchicalFactSquareMat.m ParamsHierarchicalFactRectMat.m license.m")
		endif()
		if(BUILD_WRAPPER_PYTHON)
			string(CONCAT DOXYGEN_FILE_PATTERNS ${DOXYGEN_FILE_PATTERNS} " __init__.py factparams.py demo.py")
		endif()
		configure_file(${FAUST_DOC_SRC_DIR}/Doxyfile.in ${PROJECT_BINARY_DIR}/doc/Doxyfile @ONLY)
		# ./gen_doc/images/* files is duplicated in doc/html/ to call images documentation in the source code with relative path of image's files, from build directory.
		configure_file(${FAUST_DOC_SRC_DIR}/py_filterout_namespace.py ${PROJECT_BINARY_DIR}/doc/py_filterout_namespace.py @ONLY)
		if(UNIX)
			configure_file(${FAUST_DOC_SRC_DIR}/py_filter.sh.in ${PROJECT_BINARY_DIR}/doc/py_filter @ONLY)
			configure_file(${FAUST_DOC_SRC_DIR}/doxymatlab/m2cpp.pl ${PROJECT_BINARY_DIR}/doc/m2cpp @ONLY)
		elseif(WIN32)
			configure_file(${FAUST_DOC_SRC_DIR}/py_filter.bat.in ${PROJECT_BINARY_DIR}/doc/py_filter.bat @ONLY)
			configure_file(${FAUST_DOC_SRC_DIR}/doxymatlab/m2cpp.pl ${PROJECT_BINARY_DIR}/doc/m2cpp.pl @ONLY)
		endif()
		configure_file(${FAUST_DOC_SRC_DIR}/doxymatlab/m2cpp.bat ${PROJECT_BINARY_DIR}/doc/m2cpp.bat @ONLY)
		file(COPY ${FAUST_DOC_SRC_DIR}/images/ DESTINATION ${PROJECT_BINARY_DIR}/doc/html/ )
		add_custom_target(doc ALL ${DOXYGEN_EXECUTABLE} ${PROJECT_BINARY_DIR}/doc/Doxyfile WORKING_DIRECTORY ${PROJECT_BINARY_DIR}/doc COMMENT "Generating API documentation with Doxygen" VERBATIM)
		#install(DIRECTORY ${PROJECT_BINARY_DIR}/doc/html DESTINATION doc/share/doc)
		#file(MAKE_DIRECTORY ${FAUST_INSTALL_DOC})
		#install(DIRECTORY ${PROJECT_BINARY_DIR}/doc/html DESTINATION ${FAUST_INSTALL_DOC} FILE_PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_WRITE GROUP_EXECUTE WORLD_READ WORLD_WRITE WORLD_EXECUTE)
		string(TIMESTAMP DOXYGEN_CURRENT_DATE "%Y-%m-%d - %H:%M")
		if(EXCLUDE_FAUST_LIB_INSTALL)
		    file(READ mainpage_wrappers_inc.md INCLUDE_SPECIFIC_DOC)
		else()
		    file(READ mainpage_cpp_inc.md INCLUDE_SPECIFIC_DOC)
		endif()
		configure_file(${FAUST_DOC_SRC_DIR}/mainpage.md ${PROJECT_BINARY_DIR}/doc/mainpage.md)
	else()
		message(WARNING "Doxygen not found, cannot generate the documentation")
	endif(DOXYGEN_FOUND)

	if(INCLUDE_ALL_SYS_INSTALL_INSTRUCS)
	    configure_file(${FAUST_DOC_SRC_DIR}/bin_pkgs/macosx/README_install_part.html ${PROJECT_BINARY_DIR}/doc/README_install_part.html)
	    file(READ ${PROJECT_BINARY_DIR}/doc/README_install_part.html OS_SPECIFIC_INSTALL_GUIDE_INSTRUCS1)
	    configure_file(${FAUST_DOC_SRC_DIR}/bin_pkgs/linux/README_install_part.html ${PROJECT_BINARY_DIR}/doc/README_install_part.html)
	    file(READ ${PROJECT_BINARY_DIR}/doc/README_install_part.html OS_SPECIFIC_INSTALL_GUIDE_INSTRUCS2)
	    string(CONCAT OS_SPECIFIC_INSTALL_GUIDE_INSTRUCS ${OS_SPECIFIC_INSTALL_GUIDE_INSTRUCS1} ${OS_SPECIFIC_INSTALL_GUIDE_INSTRUCS2})
	endif()

	if(APPLE)
		configure_file(${FAUST_DOC_SRC_DIR}/bin_pkgs/macosx/installer_readme.html.in ${PROJECT_BINARY_DIR}/doc/installer_readme.html @ONLY)
		file(COPY ${FAUST_DOC_SRC_DIR}/bin_pkgs/macosx/licenses.html DESTINATION ${PROJECT_BINARY_DIR}/doc/)
		if(NOT DEFINED OS_SPECIFIC_INSTALL_GUIDE_INSTRUCS)
		    configure_file(${FAUST_DOC_SRC_DIR}/bin_pkgs/macosx/README_install_part.html ${PROJECT_BINARY_DIR}/doc/README_install_part.html)
		    file(READ ${PROJECT_BINARY_DIR}/doc/README_install_part.html OS_SPECIFIC_INSTALL_GUIDE_INSTRUCS)
		endif()
		#file(COPY ${FAUST_DOC_SRC_DIR}/bin_pkgs/macosx/README.html DESTINATION ${PROJECT_BINARY_DIR}/doc/html/)
		configure_file(${FAUST_DOC_SRC_DIR}/bin_pkgs/README_template.html ${PROJECT_BINARY_DIR}/doc/html/README.html @ONLY)
	elseif(UNIX)
		#file(COPY ${FAUST_DOC_SRC_DIR}/bin_pkgs/linux/README.html DESTINATION ${PROJECT_BINARY_DIR}/doc/html/)
		if(NOT DEFINED OS_SPECIFIC_INSTALL_GUIDE_INSTRUCS)
		    configure_file(${FAUST_DOC_SRC_DIR}/bin_pkgs/linux/README_install_part.html ${PROJECT_BINARY_DIR}/doc/README_install_part.html)
		    file(READ ${PROJECT_BINARY_DIR}/doc/README_install_part.html OS_SPECIFIC_INSTALL_GUIDE_INSTRUCS)
		endif()
		configure_file(${FAUST_DOC_SRC_DIR}/bin_pkgs/README_template.html ${PROJECT_BINARY_DIR}/doc/html/README.html @ONLY)
		#elif(WIN32) #TODO
	endif()
	file(REMOVE ${PROJECT_BINARY_DIR}/doc/README_install_part.html)
	configure_file(${FAUST_DOC_SRC_DIR}/bin_pkgs/README_template.md ${PROJECT_BINARY_DIR}/doc/README.md)
endif(BUILD_DOCUMENTATION) 





#IF (DOXYGEN_FOUND)
#    IF (NOT DOXY_IN_FILE_UPDATED)
#		IF(DOXYGEN_DOT_FOUND)
#    		IF(BUILD_DOCUMENTATION_GUI)
#				CONFIGURE_FILE(${PROJECT_SOURCE_DIR}/doc/doxygen_configGUIWITHDOT.in ${PROJECT_BINARY_DIR}/doc/doxygen_config.in @ONLY) 
#			ELSE(BUILD_DOCUMENTATION_GUI)
#				CONFIGURE_FILE(${PROJECT_SOURCE_DIR}/doc/doxygen_configSTDWITHDOT.in ${PROJECT_BINARY_DIR}/doc/doxygen_config.in @ONLY)    
#			ENDIF(BUILD_DOCUMENTATION_GUI)
#		ELSE(DOXYGEN_DOT_FOUND)
#			IF(BUILD_DOCUMENTATION_GUI)
#				CONFIGURE_FILE(${PROJECT_BINARY_DIR}/doc/doxygen_configGUI.in ${PROJECT_BINARY_DIR}/doc/doxygen_config.in @ONLY) 
#			ELSE(BUILD_DOCUMENTATION_GUI)
#				CONFIGURE_FILE(${PROJECT_BINARY_DIR}/doc/doxygen_configSTD.in ${PROJECT_BINARY_DIR}/doc/doxygen_config.in @ONLY) 
#			ENDIF(BUILD_DOCUMENTATION_GUI)
#		ENDIF(DOXYGEN_DOT_FOUND)
#		SET(DOXY_IN_FILE_UPDATED 1 INTERNAL) 
#	ENDIF (NOT DOXY_IN_FILE_UPDATED)
#	ADD_CUSTOM_TARGET(refman_doxygen ALL echo DEPENDS faust)
#	ADD_CUSTOM_COMMAND(
#  		TARGET refman_doxygen
#		COMMAND   ${DOXYGEN}
#		ARGS "${PROJECT_BINARY_DIR}/doc/doxygen_config.in"
#		COMMENT   "Doxygen generate the documentation")
#ELSE (DOXYGEN_FOUND)
#	MESSAGE(STATUS "Doxygen not found, cannot generate the documentation")
#ENDIF (DOXYGEN_FOUND)
